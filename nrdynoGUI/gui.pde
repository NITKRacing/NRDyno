/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void filenamefield_change1(GTextField source, GEvent event) { //_CODE_:filenamefield:467528:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:filenamefield:467528:

public void stoprec_click1(GButton source, GEvent event) { //_CODE_:stoprec:905114:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:stoprec:905114:

public void startrpmfield_change1(GTextField source, GEvent event) { //_CODE_:startrpmfield:563292:
  println("textfield2 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:startrpmfield:563292:

public void stoprpmfield_change1(GTextField source, GEvent event) { //_CODE_:stoprpmfield:629288:
  println("textfield3 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:stoprpmfield:629288:

public void settings_click1(GButton source, GEvent event) { //_CODE_:settings:642696:
  println("button3 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:settings:642696:

public void imgButton1_click1(GImageButton source, GEvent event) { //_CODE_:imgButton1:297195:
  println("imgButton1 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:imgButton1:297195:

public void panel1_Click1(GPanel source, GEvent event) { //_CODE_:panel1:235688:
  println("panel1 - GPanel >> GEvent." + event + " @ " + millis());
} //_CODE_:panel1:235688:

public void startrec_click1(GButton source, GEvent event) { //_CODE_:startrec:372962:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:startrec:372962:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Mission Control - NRDyno");
  filenamefield = new GTextField(this, 180, 230, 380, 20, G4P.SCROLLBARS_NONE);
  filenamefield.setOpaque(true);
  filenamefield.addEventHandler(this, "filenamefield_change1");
  label1 = new GLabel(this, 20, 230, 140, 20);
  label1.setText("Desired Filename");
  label1.setTextBold();
  label1.setOpaque(false);
  stoprec = new GButton(this, 180, 30, 120, 30);
  stoprec.setText("Stop Recording");
  stoprec.setTextBold();
  stoprec.setLocalColorScheme(GCScheme.RED_SCHEME);
  stoprec.addEventHandler(this, "stoprec_click1");
  label2 = new GLabel(this, 20, 90, 110, 30);
  label2.setText("Start RPM");
  label2.setTextBold();
  label2.setOpaque(false);
  label3 = new GLabel(this, 20, 150, 110, 30);
  label3.setText("Stop RPM");
  label3.setTextBold();
  label3.setOpaque(false);
  startrpmfield = new GTextField(this, 160, 90, 160, 30, G4P.SCROLLBARS_NONE);
  startrpmfield.setOpaque(true);
  startrpmfield.addEventHandler(this, "startrpmfield_change1");
  stoprpmfield = new GTextField(this, 160, 150, 160, 30, G4P.SCROLLBARS_NONE);
  stoprpmfield.setOpaque(true);
  stoprpmfield.addEventHandler(this, "stoprpmfield_change1");
  settings = new GButton(this, 780, 30, 100, 30);
  settings.setText("Settings");
  settings.setTextBold();
  settings.addEventHandler(this, "settings_click1");
  imgButton1 = new GImageButton(this, 600, 200, 280, 90, new String[] { "Picture1.png", "Picture1.png", "Picture1.png" } );
  imgButton1.addEventHandler(this, "imgButton1_click1");
  panel1 = new GPanel(this, 390, 90, 330, 90, "   Parameters                      Current                    Previous");
  panel1.setText("   Parameters                      Current                    Previous");
  panel1.setTextBold();
  panel1.setOpaque(true);
  panel1.addEventHandler(this, "panel1_Click1");
  label4 = new GLabel(this, 10, 30, 80, 20);
  label4.setText("Peak Torque");
  label4.setTextBold();
  label4.setLocalColorScheme(GCScheme.RED_SCHEME);
  label4.setOpaque(false);
  label5 = new GLabel(this, 10, 60, 80, 20);
  label5.setText("Peak Power");
  label5.setTextBold();
  label5.setLocalColorScheme(GCScheme.RED_SCHEME);
  label5.setOpaque(false);
  panel1.addControl(label4);
  panel1.addControl(label5);
  currptorque = new GLabel(this, 500, 120, 100, 20);
  currptorque.setOpaque(false);
  currppower = new GLabel(this, 500, 150, 100, 20);
  currppower.setOpaque(false);
  startrec = new GButton(this, 20, 30, 120, 30);
  startrec.setText("Start Recording");
  startrec.setTextBold();
  startrec.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  startrec.addEventHandler(this, "startrec_click1");
  prevptorque = new GLabel(this, 610, 120, 100, 20);
  prevptorque.setOpaque(false);
  prevppower = new GLabel(this, 610, 150, 100, 20);
  prevppower.setOpaque(false);
  label10 = new GLabel(this, 20, 260, 140, 20);
  label10.setText("File Saved To");
  label10.setTextBold();
  label10.setOpaque(false);
  filesavedlabel = new GLabel(this, 180, 260, 380, 20);
  filesavedlabel.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GTextField filenamefield; 
GLabel label1; 
GButton stoprec; 
GLabel label2; 
GLabel label3; 
GTextField startrpmfield; 
GTextField stoprpmfield; 
GButton settings; 
GImageButton imgButton1; 
GPanel panel1; 
GLabel label4; 
GLabel label5; 
GLabel currptorque; 
GLabel currppower; 
GButton startrec; 
GLabel prevptorque; 
GLabel prevppower; 
GLabel label10; 
GLabel filesavedlabel; 